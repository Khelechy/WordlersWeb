/**
 * Minified by jsDelivr using Terser v5.15.0.
 * Original file: /npm/@microsoft/signalr-protocol-msgpack@6.0.9/dist/cjs/BinaryMessageFormat.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.BinaryMessageFormat=void 0;class BinaryMessageFormat{static write(e){let t=e.byteLength||e.length;const r=[];do{let e=127&t;t>>=7,t>0&&(e|=128),r.push(e)}while(t>0);t=e.byteLength||e.length;const s=new Uint8Array(r.length+t);return s.set(r,0),s.set(e,r.length),s.buffer}static parse(e){const t=[],r=new Uint8Array(e),s=[0,7,14,21,28];for(let n=0;n<e.byteLength;){let a,o=0,i=0;do{a=r[n+o],i|=(127&a)<<s[o],o++}while(o<Math.min(5,e.byteLength-n)&&0!=(128&a));if(0!=(128&a)&&o<5)throw new Error("Cannot read message size.");if(5===o&&a>7)throw new Error("Messages bigger than 2GB are not supported.");if(!(r.byteLength>=n+o+i))throw new Error("Incomplete message.");t.push(r.slice?r.slice(n+o,n+o+i):r.subarray(n+o,n+o+i)),n=n+o+i}return t}}exports.BinaryMessageFormat=BinaryMessageFormat;
//# sourceMappingURL=/sm/4f1bff20f28f87c47aa964205d6be1b57e007a53897347dd2e0c8f2f164a02e7.map